# sample servers.conf file

# This is a condition for logging only unusual stuff
# (i.e. exclude 2xx and 3xx response status codes from log)
map $status $loggable {
	~^[23]  0;
	default 1;
}
# use it like this:
# access_log /path/to/access.log combined if=$loggable;
# for details, see:
# https://docs.nginx.com/nginx/admin-guide/monitoring/logging/#enabling-conditional-logging


# === (almost) static server ===
server {
	listen              80;
	listen              [::]:80;
	listen              443 ssl http2;
	listen              [::]:443 ssl http2;
	server_name         alexey.shpakovsky.ru;
	root                /data/public/alexey.shpakovsky.ru;
	access_log          /data/logs/alexey.log.gz combined gzip if=$loggable;
	expires             30d;
	# use pre-compressed page.html.gz file instead of compressing page.html
	# for details, see:
	# http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html
	gzip_static         on;
	# redirects, forbids
	location /.git/    { return 301 'https://github.com/Lex-2008/Lex-2008.github.io.git/$request_uri'; }
	location /private/ { return 403 Forbidden; }
	# strip 'index.html' from urls
	if ($request_uri ~ (.*/)index.html$) { return 301 '$scheme://$server_name$1'; }
	# dynamic parts
	location /logshow/ { proxy_pass http://127.0.0.1:8003/; }
	location /en/spam-emails.html {
		ssi on;
		expires 3h;
		gzip_static off;
	}
	location /en/relay-attempts.html {
		ssi on;
		expires 3h;
		gzip_static off;
	}
	location /en/wrong-users.html {
		ssi on;
		expires 3h;
		gzip_static off;
	}
	location /en/login-attempts.html {
		ssi on;
		expires 5m;
		gzip_static off;
	}
}

# strip out www prefix
server {
	listen              80;
	listen              [::]:80;
	listen              443 ssl http2;
	listen              [::]:443 ssl http2;
	server_name         www.alexey.shpakovsky.ru;
	return              301 '$scheme://alexey.shpakovsky.ru$request_uri';
	access_log          off;
	error_log           /dev/null emerg;
}

server {
	listen              80;
	listen              [::]:80;
	listen              443 ssl http2;
	listen              [::]:443 ssl http2;
	server_name         www.shpakovsky.ru;
	return              301 '$scheme://shpakovsky.ru$request_uri';
	access_log          off;
	error_log           /dev/null emerg;
}


# === main server which does nothing (useful) ===

server {
	listen              80;
	listen              [::]:80;
	listen              443 ssl http2;
	listen              [::]:443 ssl http2;
	server_name         shpakovsky.ru;
	# there's only noise there
	access_log          off;
	error_log           /dev/null emerg;
	location /robots.txt          { return 200 'User-agent: *\nDisallow: /'; }
	location /.well-known/carddav { return 301 https://baikal.shpakovsky.ru/dav.php; }
	location /.well-known/caldav  { return 301 https://baikal.shpakovsky.ru/dav.php; }
	location /baikal/             { return 301 https://baikal.shpakovsky.ru/dav.php; }
	location = /       { return 204; }
	location /         { return 404; }
}


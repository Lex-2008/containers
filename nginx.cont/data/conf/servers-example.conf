# sample servers.conf file

# === (almost) static server ===
server {
	listen              80;
	listen              443 ssl http2;
	server_name         alexey.shpakovsky.ru;
	root                /data/public/alexey.shpakovsky.ru;
	expires             30d;
	# use pre-compressed page.html.gz file instead of compressing page.html
	# for details, see:
	# http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html
	gzip_static         on;
	# redirects, forbids
	location /.git/    { return 301 'https://github.com/Lex-2008/Lex-2008.github.io.git/$request_uri'; }
	location /private/ { return 403 Forbidden; }
	location /photos/  { include photos-redirects.conf; }
	# for some search engines robots.txt is not enough
	location /unlisted/ { add_header X-Robots-Tag noindex; }
	location /cache/    { add_header X-Robots-Tag noindex; }
	# strip 'index.html' from urls
	if ($request_uri ~ (.*/)index.html$) { return 301 '$scheme://$server_name$1'; }
	# dynamic parts
	location /logshow/ {
		internal;
		proxy_pass http://127.0.0.1:8003/cgi-bin/;
	}
	location /en/space-2d2-3-the-finished-game.html {return 301 '$scheme://alexey.shpakovsky.ru/en/space2d2-3-the-finished-game.html'; }
	location /en/spam-emails.html {
		ssi on;
		expires 3h;
		gzip_static off;
	}
	location /en/relay-attempts.html {
		ssi on;
		expires 3h;
		gzip_static off;
	}
	location /en/wrong-users.html {
		ssi on;
		expires 3h;
		gzip_static off;
	}
	location /en/login-attempts.html {
		ssi on;
		expires 5m;
		gzip_static off;
	}
	location /static/  {
		root /data/secure/ggstproxy.shpakovsky.ru/data/html;
		}
	location  /gemini/  {
		# https://stackoverflow.com/questions/7027636/nginx-send-all-requests-to-a-single-html-page
		root /data/secure/ggstproxy.shpakovsky.ru/data/html;
		try_files '' /index.html =404;
		}
	location /cgi-bin/gemini/  {
		proxy_pass http://127.0.0.1:8008/cgi-bin/gemini-proxy/;
		proxy_set_header X-Real-IP $remote_addr;
		}
}

# strip out www prefix
server {
	listen              80;
	listen              443 ssl http2;
	server_name         www.alexey.shpakovsky.ru;
	return              301 '$scheme://alexey.shpakovsky.ru$request_uri';
	error_log           /dev/null emerg;
}

server {
	listen              80;
	listen              443 ssl http2;
	server_name         www.shpakovsky.ru;
	return              301 '$scheme://shpakovsky.ru$request_uri';
	error_log           /dev/null emerg;
}

# add www prefix
server {
	listen              80;
	server_name         olivengren.cf;
	return              301 '$scheme://www.olivengren.cf$request_uri';
	error_log           /dev/null emerg;
}

